(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{157:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return b}));var r=n(1),a=n(9),o=(n(0),n(192)),c={id:"eks",title:"EKS",sidebar_label:"EKS"},s={id:"aws/eks",title:"EKS",description:"> **Kubernetes** is managed by CNCF (vendor neutral ecosystem), open source. It's portable and extensible. It's an orchestration platform for containers and workflows.",source:"@site/docs/aws/eks.md",permalink:"/docs-and-blog/docs/aws/eks",sidebar_label:"EKS",sidebar:"someSidebar",previous:{title:"ECS",permalink:"/docs-and-blog/docs/aws/ecs"},next:{title:"Building and publishing images",permalink:"/docs-and-blog/docs/aws/examples/example1"}},l=[{value:"EKS",id:"eks",children:[]}],i={rightToc:l};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},i,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("strong",{parentName:"p"},"Kubernetes")," is managed by CNCF (vendor neutral ecosystem), open source. It's portable and extensible. It's an orchestration platform for containers and workflows.")),Object(o.b)("p",null,"In kubernetes a cluster is composed of hosts called nodes or workers. In EKS each node will be an EC2 instance."),Object(o.b)("h4",{id:"kubernetes-objects"},"Kubernetes objects:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Pods")," container or group of containers. Common to use as a wrapper around one container. Each pod gets an IP."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Services")," collection of pods."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Volumes")," represent persistent directories that mount to pods."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Namespaces")," allows to have multiple virtual clusters backed by the same physical cluster.")),Object(o.b)("p",null,"With the objects we define the desire state of our cluster, kubernetes APIs will adapt the cluster to match the definition (declarative). The kubernetes master is a collection of processes run on a host in charge of keeping the desire state of the cluster. We interact with the master node through the kubectl cli."),Object(o.b)("p",null,"In AWS masters and worker nodes should be created in multiple AZs."),Object(o.b)("h3",{id:"eks"},"EKS"),Object(o.b)("p",null,"Takes care of most configuration."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("strong",{parentName:"p"},"EKS")," (Amazon Elastic Kubernetes Service)")),Object(o.b)("p",null,"If we don't use EKS we'd need to set up kubernetes by hand creating all the master and worker nodes, accross at least 3 availability zones."),Object(o.b)("p",null,"EKS provides many integrations with other AWS services. Handles high availability."),Object(o.b)("p",null,"For using EKS we'll need EKS control and Kube control on top of aws cli."),Object(o.b)("h4",{id:"demo-of-eks"},"Demo of EKS"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Use EKS control to create the cluster. With this command we define the name, version and nodes of the cluster.")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"eksctl create cluster...\n")),Object(o.b)("p",null,"After this command we can see the cluster by running ",Object(o.b)("inlineCode",{parentName:"p"},"aws eks list-clusters ...")),Object(o.b)("ol",{start:2},Object(o.b)("li",{parentName:"ol"},"Once we have the cluster we need kube control to interact with the pods. For spinning up pods:")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"kubectl create deployment nginx ...\n")),Object(o.b)("ol",{start:3},Object(o.b)("li",{parentName:"ol"},"Scaling up the deployment")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"kubectl scale deployment/nginx --replicas=3\n")),Object(o.b)("p",null,"We can get detailed info of the deployment by running ",Object(o.b)("inlineCode",{parentName:"p"},"kubectl describe deployment/nginx")," With ",Object(o.b)("inlineCode",{parentName:"p"},"kubectl get pods")," we can see the pods"),Object(o.b)("ol",{start:4},Object(o.b)("li",{parentName:"ol"},"Expose the pods as a service behind a load balancer")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"kubectl expose ... --type=LoadBalancer\n")),Object(o.b)("h4",{id:"scaling"},"Scaling"),Object(o.b)("p",null,"We need the nodes of the cluster and the pods with the container instances."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Kubernetes Cluster Autoscaler")," Adjusts the size of the cluster to meet the demand. Based on insufficient cluster resources (add nodes) and underutilized nodes (remove nodes). It is available through the kubectl.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Horizontal Pod Autoscaler")," Scales the number of pods. Based on the metrics server (add manually). Or use the Custom Metrics API.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Vertical Pod Autoscaler")," Also requires the metrics server. Adjusts the reservations for the pods (cpu and memory)"))),Object(o.b)("p",null,Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://www.cncf.io/"}),"https://www.cncf.io/")))}b.isMDXComponent=!0},192:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=a.a.createContext({}),b=function(e){var t=a.a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s({},t,{},e)),n},p=function(e){var t=b(e.components);return a.a.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),p=b(n),d=r,m=p["".concat(c,".").concat(d)]||p[d]||u[d]||o;return n?a.a.createElement(m,s({ref:t},i,{components:n})):a.a.createElement(m,s({ref:t},i))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,c=new Array(o);c[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,c[1]=s;for(var i=2;i<o;i++)c[i]=n[i];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);