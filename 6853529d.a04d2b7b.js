(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{164:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return l}));var r=n(1),a=n(9),o=(n(0),n(192)),i={id:"example4",title:"Dynamic port mapping with ECS",sidebar_label:"Dynamic port mapping with ECS"},c={id:"aws/examples/example4",title:"Dynamic port mapping with ECS",description:"Running many containers in the same host is possible with ECS. If we select a **BRIDGE** network the containers will expose their ports to whatever host port is available at that moment, in the ephemeral port range. This is called **dynmaic port mapping**.",source:"@site/docs/aws/examples/example4.md",permalink:"/docs-and-blog/docs/aws/examples/example4",sidebar_label:"Dynamic port mapping with ECS",sidebar:"someSidebar",previous:{title:"Deploying to EB and ECS + seeded volume",permalink:"/docs-and-blog/docs/aws/examples/example3"}},s=[{value:"Setting up in ECS",id:"setting-up-in-ecs",children:[]}],p={rightToc:s};function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Running many containers in the same host is possible with ECS. If we select a ",Object(o.b)("strong",{parentName:"p"},"BRIDGE")," network the containers will expose their ports to whatever host port is available at that moment, in the ephemeral port range. This is called ",Object(o.b)("strong",{parentName:"p"},"dynmaic port mapping"),"."),Object(o.b)("h3",{id:"setting-up-in-ecs"},"Setting up in ECS"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Create a docker compose with an api image from ECR and the dynamic por mapping ",Object(o.b)("inlineCode",{parentName:"li"},"0:3000"))),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),'version: "3.0"\nservices:\n  api-1:\n    image: "562918915660.dkr.ecr.us-west-2.amazonaws.com/api-1" # <- Take this uri from ECR\n    ports:\n      - "0:3000"\n')),Object(o.b)("ol",{start:2},Object(o.b)("li",{parentName:"ol"},"Create the task definition params yaml for ECS. An execution role is needed.")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),'version: 1\ntask_definition:\n  task_execution_role: "arn:aws:iam::562918915660:role/task-role"\n  task_size:\n    cpu_limit: "512"\n    mem_limit: "256"\n')),Object(o.b)("ol",{start:3},Object(o.b)("li",{parentName:"ol"},"Create the task definition from a docker compose and a ecs-params files.")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"ecs-cli compose --file docker-compose.yaml --ecs-params ecs-params.yaml --region us-west-2 --project-name project-1 --cluster-config cluster-1 --cluster cluster-1 create\n")),Object(o.b)("ol",{start:4},Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"In ECS -> task definitions -> project-1 -> run task. Select EC2 launch type with 10 tasks. And run. 10 tasks will be running in the cluster.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Now in EC2 -> Under NETWORK & SECURITY choose Security Groups -> select the cluster and take the security group id -> inbound rules -> set port range to 0-65535 from source anywhere (to allow ephemeral ports)")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Now we can take the IP of any of the 10 running tasks in ECS and access it"))))}l.isMDXComponent=!0},192:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),l=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},m=function(e){var t=l(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=l(n),b=r,d=m["".concat(i,".").concat(b)]||m[b]||u[b]||o;return n?a.a.createElement(d,c({ref:t},p,{components:n})):a.a.createElement(d,c({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=b;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var p=2;p<o;p++)i[p]=n[p];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);